{"version":3,"file":"app.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://ext-test/./src/app.js"],"sourcesContent":["\nlet checkboxList = document.querySelectorAll('.checkbox')\n// let tips = document.querySelectorAll('.tip')\nlet tipsList = document.querySelector('#tipsList')\nlet tipsListWrapper = document.querySelector('.tips-list-wrapper')\nlet tipsArray = [\n  { title: 'Hvad gør alle de andre?', desc: 'Så skal jeg i hvert fald ikke gøre det' },\n  { title: 'Hvordan er min indledning?', desc: 'Den skal fange opmærksomhed!' },\n  { title: 'Hvordan er min struktur?', desc: 'Opdel teksten i let spiselige bidder' },\n  { title: 'Hvordan er min rytme?', desc: 'Veksl mellem korte og lange sætninger og afsnit' },\n  { title: 'Hvem taler jeg til?', desc: 'Henvend dig direkte til læseren' },\n  { title: 'Hvem skal have noget ud af den her tekst?', desc: 'Tal om din læsers udfordring' },\n  { title: 'Giver jeg et løfte?', desc: 'Det er en rigtig god idé at give et løfte om en løsning - tidligt i teksten' },\n  { title: 'Har jeg noget blikfang?', desc: 'Overvej at tilføje enten billede, emojis eller formateret tekst' },\n  { title: 'Lyder min tekst som smuk musik?', desc: 'Læs din tekst højt, inden du trykker \"post\"' },\n  { title: 'Hvad er klokken?', desc: 'Lad være med at poste om natten eller midt i aftensmaden' }\n]\nlet goOptions = document.querySelectorAll('.go-to-options')\ngoOptions.forEach((e) => {\n  e.addEventListener('click', function () {\n    if (chrome.runtime.openOptionsPage) {\n      chrome.runtime.openOptionsPage();\n    } else {\n      window.open(chrome.runtime.getURL('options.html'));\n    }\n  });\n})\n\n\nfor (let [i, item] of tipsArray.entries()) {\n  let checkbox = `\n        <li class=\"tip\">\n                    <div class=\"checkbox-wrapper-52\">\n                        <label for=\"${'todo' + [i]}\" class=\"item\">\n                          <input type=\"checkbox\" id=\"${'todo' + [i]}\" class=\"checkbox hidden\"/>\n                          <label for=\"${'todo' + [i]}\" class=\"cbx\">      \n                            <svg width=\"14px\" height=\"12px\" viewBox=\"0 0 14 12\">\n                              <polyline points=\"1 7.6 5 11 13 1\"></polyline>\n                            </svg>\n                          </label>\n                          <label for=\"${'todo' + [i]}\" class=\"cbx-lbl\">\n                          <h4><span>${i + 1} ⎯ </span> ${item.title}</h4>\n                            <p>${item.desc}</p>\n                          </label>\n                        </label>\n                      </div>\n                </li>\n    `\n  tipsList.insertAdjacentHTML('beforeend', checkbox)\n  checkboxList = document.querySelectorAll('.checkbox')\n  if (localStorage.getItem(`todo${[i]}`)) {\n    document.querySelector(`#todo${i}`).checked = JSON.parse(localStorage.getItem(`todo${[i]}`))\n  }\n}\n\nfunction goGreen() {\n  let counter = 0;\n  for (let check of checkboxList) {\n    if (check.checked) {\n      counter++\n    }\n    if (counter == checkboxList.length) {\n      tipsListWrapper.classList.add('go-green')\n    } else {\n      tipsListWrapper.classList.remove('go-green')\n    }\n  }\n\n}\n\ngoGreen()\n\nfor (let [i, box] of checkboxList.entries()) {\n  box.addEventListener('click', () => {\n    localStorage.setItem(`todo${[i]}`, box.checked);\n    goGreen()\n  })\n}\n\n\n\n\n"],"names":[],"sourceRoot":""}